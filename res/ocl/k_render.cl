#include "rt.hcl"__kernel void k_render(    t_options options,    t_cam camera,    __global t_obj* scene,    __global t_light* lights,    __global t_int* output){    int id = get_global_id(0);    int px = id % options.width - options.width / 2;    int py = id / options.height - options.height / 2;    float width = options.width;    float height = options.height;    float iar = width / height;    float s = tan((options.fov * 0.5) / 360 * (2 * M_PI));    float x = (2 * (px + 0.5) / width - 1) * iar * s;    float y = (1 - 2 * (py + 0.5)) / height * s;    t_ray r = (t_ray){            VEC(px, py, 0),            VEC(0, 0, 1),            100    };    if (id == 0) print_render_args(&options, &camera, scene, lights);    t_hit *h;    t_hit h_;    h = intersect(scene, options.scene_size, &r, &h_);    output[id] = h ? h->obj->symbol : '.';}